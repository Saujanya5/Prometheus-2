// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prometheus_API.Model;

namespace Prometheus_API.Migrations
{
    [DbContext(typeof(PROJECT_SPRINT1Context))]
    [Migration("20210906070726_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Prometheus_API.Model.Assignment", b =>
                {
                    b.Property<decimal>("HomeWorkId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("HomeWorkID");

                    b.Property<decimal>("TeacherId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("TeacherID");

                    b.Property<decimal>("CourseId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("CourseID");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("HomeWorkId", "TeacherId", "CourseId")
                        .HasName("PK__Assignme__1C8A785DD0D14792");

                    b.HasIndex("CourseId");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("Prometheus_API.Model.Course", b =>
                {
                    b.Property<decimal>("CourseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("CourseID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("date");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("date");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("CourseId");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("Prometheus_API.Model.Enrollment", b =>
                {
                    b.Property<decimal>("StudentId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("StudentID");

                    b.Property<decimal>("CourseId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("CourseID");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("StudentId", "CourseId")
                        .HasName("PK__Enrollme__5E57FD61E27A644E");

                    b.HasIndex("CourseId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("Prometheus_API.Model.Homework", b =>
                {
                    b.Property<decimal>("HomeWorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("HomeWorkID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Deadline")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("LongDescription")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("ReqTime")
                        .HasColumnType("int");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("HomeWorkId");

                    b.ToTable("Homework");
                });

            modelBuilder.Entity("Prometheus_API.Model.Student", b =>
                {
                    b.Property<decimal>("StudentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("StudentID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("FName");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LName");

                    b.Property<decimal?>("MobileNo")
                        .HasColumnType("numeric(10,0)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.HasKey("StudentId");

                    b.ToTable("Student");
                });

            modelBuilder.Entity("Prometheus_API.Model.Teach", b =>
                {
                    b.Property<decimal>("TeacherId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("TeacherID");

                    b.Property<decimal>("CourseId")
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("CourseID");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("TeacherId", "CourseId")
                        .HasName("PK__Teaches__81608E5CD8B8E599");

                    b.HasIndex("CourseId");

                    b.ToTable("Teaches");
                });

            modelBuilder.Entity("Prometheus_API.Model.Teacher", b =>
                {
                    b.Property<decimal>("TeacherId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("numeric(5,0)")
                        .HasColumnName("TeacherID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("City")
                        .HasMaxLength(10)
                        .IsUnicode(false)
                        .HasColumnType("varchar(10)");

                    b.Property<DateTime>("Dob")
                        .HasColumnType("date")
                        .HasColumnName("DOB");

                    b.Property<string>("Fname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("FName");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Lname")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("LName");

                    b.Property<decimal?>("MobileNo")
                        .HasColumnType("numeric(10,0)");

                    b.Property<string>("Password")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValueSql("((1))");

                    b.HasKey("TeacherId");

                    b.ToTable("Teacher");
                });

            modelBuilder.Entity("Prometheus_API.Model.Assignment", b =>
                {
                    b.HasOne("Prometheus_API.Model.Course", "Course")
                        .WithMany("Assignments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Assignmen__Cours__46E78A0C")
                        .IsRequired();

                    b.HasOne("Prometheus_API.Model.Homework", "HomeWork")
                        .WithMany("Assignments")
                        .HasForeignKey("HomeWorkId")
                        .HasConstraintName("FK__Assignmen__HomeW__47DBAE45")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("HomeWork");
                });

            modelBuilder.Entity("Prometheus_API.Model.Enrollment", b =>
                {
                    b.HasOne("Prometheus_API.Model.Course", "Course")
                        .WithMany("Enrollments")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Enrollmen__Cours__412EB0B6")
                        .IsRequired();

                    b.HasOne("Prometheus_API.Model.Student", "Student")
                        .WithMany("Enrollments")
                        .HasForeignKey("StudentId")
                        .HasConstraintName("FK__Enrollmen__Stude__4222D4EF")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Prometheus_API.Model.Teach", b =>
                {
                    b.HasOne("Prometheus_API.Model.Course", "Course")
                        .WithMany("Teaches")
                        .HasForeignKey("CourseId")
                        .HasConstraintName("FK__Teaches__CourseI__3E52440B")
                        .IsRequired();

                    b.HasOne("Prometheus_API.Model.Teacher", "Teacher")
                        .WithMany("Teaches")
                        .HasForeignKey("TeacherId")
                        .HasConstraintName("FK__Teaches__Teacher__3D5E1FD2")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Teacher");
                });

            modelBuilder.Entity("Prometheus_API.Model.Course", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("Enrollments");

                    b.Navigation("Teaches");
                });

            modelBuilder.Entity("Prometheus_API.Model.Homework", b =>
                {
                    b.Navigation("Assignments");
                });

            modelBuilder.Entity("Prometheus_API.Model.Student", b =>
                {
                    b.Navigation("Enrollments");
                });

            modelBuilder.Entity("Prometheus_API.Model.Teacher", b =>
                {
                    b.Navigation("Teaches");
                });
#pragma warning restore 612, 618
        }
    }
}
